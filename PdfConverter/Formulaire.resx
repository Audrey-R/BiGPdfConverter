<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SelectPdf.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SelectFile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAAnAAAAJwEqCZFPAAAEP0lE
        QVRoQ9XZaYhWVRjA8SlbLEvLyNQkFRGKNE1NkjBKhUjTFqmgoMxdK4mKxBTED1ESfahc2rMiIkFSUTDU
        FAWLzD6EoNlCEZRKmEsoZqX/v74HLod3BufOOZeZB37MO3fuHM5z79nfhlYYI3DzmY9tL4ZgD77FDV5o
        S9EXX+JkzUZcjTYRV2INQuWDT3AZWnV0xDv4H3EC/+IVtEerjPMxF/8grnxwDE+jHZodHTAer+PthN7E
        UMzEUdSreNEhPIRmxSVYgr+wHvUqUtZiDMBTeAMfwkrGFd8Lm5cJP4HzcNbxMA5gFnK3wR74CXEC23Ap
        SoVZr8aFp3/LG1kS+AhvnfmYPbIlYHutIkzgZ8QJOLG1iQScrOZjERzxZEd3+Czd/6pMwBFvOp7HnBrn
        hwko3QfjBM5BT/TD9YlYVld0xw+Im9DX6IRSESfgrOna5DAcXlOwrJfRGR/ABdyGmi9gM3IyLRVxAk7l
        vmYnN9tqCpb1AC7C/ZiMSTV+vhsXoFTUa0K+9lsxPBHL6oMrsA6/wKb0I37FciR7Az6JlXDV6OIrBcty
        xDGuQm+MwzBcA5fZPrhSUa8JPYIX8UIiL8EKh3DI/Bw21RZHnMC5GIzRuDMRy7JZhrAvbMGTp39rYdRr
        Qqvg8HYiEcuyM4fImoBv4A5MxZRELOsWhKgsAYe4FCpNwCZUb+PdUs4FISp5A9NQrzmcDZ/4jILH4VwQ
        ImsCDqP34Fm4Smwu/89Zt6ltYatvQpthJRuL7E1oFCbisRL8P8f+po5HsiZQRSRNwOOM4iRTRSRJwKbi
        ImokboObjVTcvFyMxiJJAm6iV8Bl7W543K2wzPX0wJ/+Hq6HayreH66Hn7vgRuU5dEMcSRJwC+dWLh5B
        XP5aiZ2wgn/D656oWdnvsQ/hkDZc9yHIU7ZQ1n/YiutQjKwJ+BRdpz9a41nlb3ArOAhOTPfBfuP9y+B1
        JyvPQD9FXKb/W9y0Z03Ap+hXPyZyHA/iPSzFXfCQ9it4j/e6n3Wt772+FZ96XOaf8FuZEFkTsIn4RN2V
        uem+HWvhWsaKujz2KHwsbOce2vbHa/CE7w/EZcr5IUT2BK6Fa5pnYKV8um4Jiwn4NjYhJPAqGkvAN2Nz
        DFFJE4qPAH3CY3AQPnn7iZ08NCE7f/H+Ijv9QITI3oldzNlxi9c9278Rdmqbjx3T6+/D45Gw86rH5ldc
        3GVNwIrsh99bFa87nJqURyIeVoXrR2AnLd4bWMZn6IViJEnAc0qf4nY4qvgz+Cb6PVzbUVP8u5/j+y3P
        Fa3D6uWII0kCnsM4G3ti4OrTN+LpcQp+I9nUSVuSBAyT+BjF7V4VkSwBw2HQ8b70FwwlwtM4lx9JDrbu
        hd9QLkQXeGrmE8rBsu3Q7+J33IQWh4UugGP1d3A7mJNzhwe67t5c0icJO5x7gtmYB781ycGynd1dFzWj
        8g0NpwBUZmxp+BOuswAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
</root>